"""create many to many relationship between tag and review

Revision ID: 76dd2c2780bb
Revises: 051646cdad54
Create Date: 2025-08-08 15:52:46.689329

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '76dd2c2780bb'
down_revision = '051646cdad54'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_reviews_tags',
    sa.Column('book_review_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_review_id'], ['book_reviews.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('book_review_id', 'tag_id')
    )
    with op.batch_alter_table('book_reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('book_reviews_tag_id_fkey'), type_='foreignkey')
        batch_op.drop_column('tag_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('book_reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('book_reviews_tag_id_fkey'), 'tags', ['tag_id'], ['id'])

    op.drop_table('book_reviews_tags')
    # ### end Alembic commands ###
